<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picQR.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AABJRU5ErkJggg==
</value>
  </data>
  <metadata name="openFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>